name: CI

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  # Early exit: Skip if only docs changed
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-run-tests: ${{ steps.filter.outputs.should-run-tests }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            should-run-tests:
              - 'src/**'
              - 'tests/**'
              - 'scripts/**'
              - 'pyproject.toml'
              - 'requirements.txt'
              - '.github/workflows/**'

  lint:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-run-tests == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-poetry-lint-${{ hashFiles('poetry.lock', '.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3 pre-commit==3.8.0

      - name: Install pre-commit hooks
        run: |
          poetry install
          pre-commit install-hooks

      - name: Run linting and formatting checks
        run: pre-commit run --all-files --show-diff-on-failure

  unit-tests:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-run-tests == 'true'
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.13']

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-tests-${{ hashFiles('poetry.lock') }}-py${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          poetry install

      - name: Set up test environment
        run: |
          echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "MONGODB_URI=mongodb://localhost:27017" >> $GITHUB_ENV
          echo "MONGODB_NAME=test_crypto_news_aggregator" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "REDIS_DB=1" >> $GITHUB_ENV
          echo "NEWS_API_KEY=test-api-key" >> $GITHUB_ENV
          echo "API_KEYS=testapikey123" >> $GITHUB_ENV
          echo "TESTING=True" >> $GITHUB_ENV
          echo "CELERY_BROKER_URL=memory://" >> $GITHUB_ENV
          echo "CELERY_RESULT_BACKEND=cache+memory://" >> $GITHUB_ENV
          echo "CELERY_TASK_ALWAYS_EAGER=True" >> $GITHUB_ENV
          echo "CELERY_TASK_EAGER_PROPAGATES=True" >> $GITHUB_ENV

      - name: Run unit tests in parallel
        run: |
          poetry run pytest -m "stable and unit" -n auto --tb=short -x

  integration-tests:
    runs-on: ubuntu-latest
    needs: [check-changes, lint]
    if: needs.check-changes.outputs.should-run-tests == 'true'

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-integration-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          poetry install

      - name: Set up test environment
        run: |
          echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "MONGODB_URI=mongodb://localhost:27017" >> $GITHUB_ENV
          echo "MONGODB_NAME=test_crypto_news_aggregator" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "REDIS_DB=1" >> $GITHUB_ENV
          echo "NEWS_API_KEY=test-api-key" >> $GITHUB_ENV
          echo "API_KEYS=testapikey123" >> $GITHUB_ENV
          echo "TESTING=True" >> $GITHUB_ENV
          echo "CELERY_BROKER_URL=memory://" >> $GITHUB_ENV
          echo "CELERY_RESULT_BACKEND=cache+memory://" >> $GITHUB_ENV
          echo "CELERY_TASK_ALWAYS_EAGER=True" >> $GITHUB_ENV
          echo "CELERY_TASK_EAGER_PROPAGATES=True" >> $GITHUB_ENV

      - name: Run integration tests in parallel
        run: |
          poetry run pytest -m "stable and integration" -n auto --tb=short -x

  flaky-tests:
    runs-on: ubuntu-latest
    needs: [check-changes, unit-tests, integration-tests]
    if: needs.check-changes.outputs.should-run-tests == 'true'
    continue-on-error: true

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-flaky-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          poetry install

      - name: Set up test environment
        run: |
          echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "MONGODB_URI=mongodb://localhost:27017" >> $GITHUB_ENV
          echo "MONGODB_NAME=test_crypto_news_aggregator" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "REDIS_DB=1" >> $GITHUB_ENV
          echo "NEWS_API_KEY=test-api-key" >> $GITHUB_ENV
          echo "API_KEYS=testapikey123" >> $GITHUB_ENV
          echo "TESTING=True" >> $GITHUB_ENV
          echo "CELERY_BROKER_URL=memory://" >> $GITHUB_ENV
          echo "CELERY_RESULT_BACKEND=cache+memory://" >> $GITHUB_ENV
          echo "CELERY_TASK_ALWAYS_EAGER=True" >> $GITHUB_ENV
          echo "CELERY_TASK_EAGER_PROPAGATES=True" >> $GITHUB_ENV

      - name: Run flaky and broken tests
        run: |
          poetry run pytest -m "broken or flaky" --tb=short
