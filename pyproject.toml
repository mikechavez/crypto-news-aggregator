[project]
name = "crypto-news-aggregator"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name",email = "you@example.com"}
]
readme = "README.md"
requires-python = ">=3.13"

[tool.poetry.dependencies]
python = ">=3.13"
fastapi = ">=0.115.13,<0.116.0"
uvicorn = {extras = ["standard"], version = ">=0.34.3,<0.35.0"}
asyncpg = ">=0.30.0,<0.31.0"
sqlalchemy = {extras = ["asyncio"], version = ">=2.0.41,<3.0.0"}
redis = ">=6.2.0,<7.0.0"
celery = ">=5.5.3,<6.0.0"
httpx = "==0.28.1"
pydantic = ">=2.11.7,<3.0.0"
python-dotenv = ">=1.1.0,<2.0.0"
textblob = ">=0.19.0,<0.20.0"
pydantic-settings = ">=2.10.0,<3.0.0"
alembic = ">=1.16.2,<2.0.0"
newsapi-python = ">=0.2.7,<0.3.0"
aiosqlite = ">=0.21.0,<0.22.0"
aiohttp = ">=3.12.13,<4.0.0"
pycoingecko = ">=3.2.0,<4.0.0"
python-jose = {extras = ["cryptography"], version = ">=3.5.0,<4.0.0"}
passlib = ">=1.7.4,<2.0.0"
email-validator = ">=2.2.0,<3.0.0"
beautifulsoup4 = ">=4.13.4,<5.0.0"
jinja2 = ">=3.1.6,<4.0.0"
python-multipart = ">=0.0.20,<0.0.21"
bcrypt = ">=4.3.0,<5.0.0"
motor = ">=3.5.0,<4.0.0"
unidecode = "*"
numpy = ">=1.22.3,<2.0.0"
certifi = ">=2024.2.2,<2026.0.0"
aiocache = ">=0.12.2,<0.13.0"
dnspython = ">=2.6.1,<3.0.0" # Support mongodb+srv URIs from MongoDB Atlas
gunicorn = "^23.0.0"
loguru = "^0.7.2"
transformers = "^4.38.2"
torch = "^2.2.1"
anthropic = "==0.25.0"
openai = "^1.14.2"
tweepy = "^4.14.0"
pandas = "^2.2.2"
async_lru = "^2.0.4"
oauthlib = "^3.2.2"
feedparser = "^6.0.12"

[tool.poetry]
name = "crypto-news-aggregator"
version = "0.1.0"
description = "A comprehensive cryptocurrency news aggregation and analysis platform"
authors = ["Crypto News Aggregator Team <team@cryptonewsaggregator.com>"]
packages = [{include = "crypto_news_aggregator", from = "src"}]


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.0.0"
pytest-mock = "^3.14.1"
pytest-cov = "^6.2.1"
pytest-httpx = "^0.35.0"
black = {version = "^25.9.0", allow-prereleases = true}

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
    "stable: reliable tests that must always pass",
    "broken: known broken tests that don't block CI",
    "flaky: tests that sometimes fail and don't block CI",
    "unit: unit tests that don't require external services",
    "integration: integration tests that require external services",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
